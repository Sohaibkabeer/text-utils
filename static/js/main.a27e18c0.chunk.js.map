{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","React","createElement","Fragment","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","role","onClick","toggleMode","for","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","heading","rows","value","onChange","e","console","log","target","placeholder","style","color","newText","toUpperCase","toLowerCase","split","length","toFixed","About","backgroundColor","myStyle","setMyStyle","_useState3","_useState4","btnTxt","setBtnTxt","data-bs-parent","Alert","alert","msg","data-bs-dismiss","defaultProps","App","setMode","setAlert","showAlert","message","setTimeout","Router","document","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a27e18c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'; \r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark': 'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: propTypes.string.isRequired };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Text-Utils\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n  }\r\n\r\n    const handleOnChange = (e)=>{\r\n        console.log('onChange')\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n    <>\r\n    <div className=\"container\"> \r\n    <h2>{props.heading}</h2>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          value={text} onChange={handleOnChange} placeholder=\"Enter your text here\"\r\n          style={{color : props.mode === 'dark' ? 'white' : 'grey'}}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to uppercase</button>\r\n      <button className=\"btn btn-secondary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n    </div>\r\n    <div className=\"container my-5\">\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length.toFixed(4)} minutes to read the words</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState( {\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const [btnTxt, setBtnTxt] = useState('Enable dark mode')\r\n  let toggleStyle = ()=>{\r\n        if(myStyle.color == 'black')\r\n        {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            }) \r\n            setBtnTxt('Enable light mode')\r\n        }\r\n        else\r\n        {\r\n            setMyStyle({\r\n                color: 'black',\r\n        backgroundColor: 'white'\r\n            }) \r\n            setBtnTxt('Enable dark mode')\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\" style={myStyle}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                style={myStyle}\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classes that we use to style each element. These classes control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                style={myStyle}\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classes that we use to style each element. These\r\n                classes control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button onClick={toggleStyle} className=\"btn btn-secondary mx-2 my-5\">{btnTxt}</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n  );\r\n}\r\n","import React, { Component, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert,setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n\n    }\n  }\n  \n  return (\n    <>\n    <Router>\n    <Navbar title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert = {alert}/>\n      <div className=\"container\">\n       <Routes> {/*'exact' keyword is used to match exact path bcuz react does partial matching */}\n          <Route exact path=\"/\" element={<Textform heading= \"Enter your text to analyze\"/>}>\n          </Route>\n          <Route exact path=\"/about\" element={<About/>}>\n          </Route>\n        </Routes>      \n      </div>\n    </Router>\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}